// <auto-generated />
using System;
using MeusLegumes.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MeusLegumes.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MeusLegumes.Domain.Contexts.Categorias.Entities.Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Categorias", (string)null);
                });

            modelBuilder.Entity("MeusLegumes.Domain.Contexts.Clientes.Entities.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Casa")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("MunicipioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NumeroContribuinte")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("PontoDeReferencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TelefoneAlternativo")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TelefonePrincipal")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("MunicipioId");

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("MeusLegumes.Domain.Contexts.Enderecos.Entities.Municipio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("ProvinciaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProvinciaId");

                    b.ToTable("Municipios", (string)null);
                });

            modelBuilder.Entity("MeusLegumes.Domain.Contexts.Enderecos.Entities.Provincia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Provincias", (string)null);
                });

            modelBuilder.Entity("MeusLegumes.Domain.Contexts.Impostos.Entities.Imposto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("Taxa")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TipoDeTaxa")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Impostos", (string)null);
                });

            modelBuilder.Entity("MeusLegumes.Domain.Contexts.Impostos.Entities.MotivoIsencaoIva", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodigoInterno")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MencaoFactura")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NormaLegalAplicavel")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("MotivosIsencaoIva", (string)null);
                });

            modelBuilder.Entity("MeusLegumes.Domain.Contexts.Produtos.Entities.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<Guid>("CategoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Destaque")
                        .HasColumnType("bit");

                    b.Property<bool>("EmEstoque")
                        .HasColumnType("bit");

                    b.Property<bool>("MaisVendido")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NovoLancamento")
                        .HasColumnType("bit");

                    b.Property<decimal>("PrecoPromocional")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Promocao")
                        .HasColumnType("bit");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UrlImagemPrincipal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("UnidadeId");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("MeusLegumes.Domain.Contexts.Produtos.Entities.ProdutoImagem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UrlImagem")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ProdutoImagem");
                });

            modelBuilder.Entity("MeusLegumes.Domain.Contexts.Produtos.Entities.ProdutoRelacionado", b =>
                {
                    b.Property<Guid>("ProdutoRelacionadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProdutoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProdutoPrincipalId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProdutoRelacionadoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ProdutoRelacionado");
                });

            modelBuilder.Entity("MeusLegumes.Domain.Contexts.Unidades.Entities.Unidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Unidades", (string)null);
                });

            modelBuilder.Entity("MeusLegumes.Domain.Contexts.Clientes.Entities.Cliente", b =>
                {
                    b.HasOne("MeusLegumes.Domain.Contexts.Enderecos.Entities.Municipio", "Municipio")
                        .WithMany()
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("MeusLegumes.Domain.Contexts.Enderecos.Entities.Municipio", b =>
                {
                    b.HasOne("MeusLegumes.Domain.Contexts.Enderecos.Entities.Provincia", "Provincia")
                        .WithMany("Municipios")
                        .HasForeignKey("ProvinciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("MeusLegumes.Domain.Contexts.Produtos.Entities.Produto", b =>
                {
                    b.HasOne("MeusLegumes.Domain.Contexts.Categorias.Entities.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MeusLegumes.Domain.Contexts.Unidades.Entities.Unidade", "Unidade")
                        .WithMany("Produtos")
                        .HasForeignKey("UnidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Unidade");
                });

            modelBuilder.Entity("MeusLegumes.Domain.Contexts.Produtos.Entities.ProdutoImagem", b =>
                {
                    b.HasOne("MeusLegumes.Domain.Contexts.Produtos.Entities.Produto", null)
                        .WithMany("ProdutoImagem")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MeusLegumes.Domain.Contexts.Produtos.Entities.ProdutoRelacionado", b =>
                {
                    b.HasOne("MeusLegumes.Domain.Contexts.Produtos.Entities.Produto", null)
                        .WithMany("ProdutoRelacionado")
                        .HasForeignKey("ProdutoId");
                });

            modelBuilder.Entity("MeusLegumes.Domain.Contexts.Categorias.Entities.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("MeusLegumes.Domain.Contexts.Enderecos.Entities.Provincia", b =>
                {
                    b.Navigation("Municipios");
                });

            modelBuilder.Entity("MeusLegumes.Domain.Contexts.Produtos.Entities.Produto", b =>
                {
                    b.Navigation("ProdutoImagem");

                    b.Navigation("ProdutoRelacionado");
                });

            modelBuilder.Entity("MeusLegumes.Domain.Contexts.Unidades.Entities.Unidade", b =>
                {
                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
